## Example ini file
! comments can be '!' or '#'

# Mesh:

! the type of mesh that is used:
! 0: unstructured, 1: cartesian
meshType =

## Unstructured Mesh:

! the format of the unstructured mesh
! possible options are: .msh, .msh2, .msh4, .mesh, .cgns
meshFormat =

! the name of the mesh file
meshFile =

## Structured Mesh:

! number of elements in x/y-direction
nElemsX =
nElemsY =

! lower left/upper right point of the mesh, any kind of braces around
! the coordinates are optional
x0 =
xMax =

! number of boundary segments (bottom, right, top, left)
nBCsegments =

! 4x definition of boundary segments, first the type, followed by a range,
! if there is more than one boundary condition; the first number defines the
! type, and the last two define the ID of the BC, used later for defining the parameters
! possible BCs are:
!			- 101: slip-wall, or symmetry plane
!		    - 201: wall, without slip (only Navier-Stokes equations)
!		    - 301: inflow
!		    - 401: outflow
!		    - 501: characteristic
!		    - 601: exact solution
!		    - 701: periodic
meshBCType =
BCstart =
BCend =

# Boundary Conditions:

! number of different boundary conditions
nBC =

! boundary condition definition, each boundary conditions that were declared above
! must now be defined; first, indicate the boundary condition by its type and ID
BCtype =

! define the parameters of the boundary condition
! 1: slip-wall: nothing
! 2: no-slip-wall: adiabatic flag, if not adiabatic, then wall temperature or wall
!	heat flux
adiabaticWall =
wallTemperature =
wallHeatFlux =
! 3: inflow: density, Mach number, angle of attack of flow, and pressure
rho =
mach =
alpha =
pressure =
! 4: outflow: nothing
! 5: characteristic: density, Mach number, angle of attack of flow, and pressure
rho =
mach =
alpha =
pressure =
! 6: exact function: exact function identifier,
BCexactFunc =
! 7: periodic: x and y coordinates to the connection point
connection =
! 8: pressure outlet: pressure at the outlet
pressure =

# Initial Conditions:

! type of initial condition
! possible options are: - 1: homogeneous initial condition
!                       - 2: exact function
ICtype =

## Homogeneous Initial Condition

! number of domains that have an initial condition (default: 1)
nDomains =

! domain ID for the different domains, followed by the initial condition
! density, Mach number, angle of attack of the flow, and pressure
domainID =
rho =
mach =
alpha =
pressure =


# Constants:

! heat capacity ratio of the fluid (default: 1.4)
gamma =

! specific gas constant of the fluid (default: 287)
R =

! reference Prandtl number (only for Navier-Stokes equations, default: 0.72)
Pr =

! viscosity of the fluid (only for Navier-Stokes equations, default: 0.0)
mu =

! reference Reynolds number (only for Navier-Stokes equations, default: 1.0)
Re =

! calculate the source flag (true or false, default: false)
calcSource =

! if true, a source function must be given
! possible source functions are: - 1: sinewave, convergence test
sourceFunction =

# Time Discretization:

! Courant–Friedrichs–Lewy number (default: 0.9)
CFL =

! viscous Courant–Friedrichs–Lewy number (only Navier-Stokes equations, default: 0.9)
DFL =

! 1D of 2D mesh flag, for that calculation of the time step
timeStep1D =

! order of temporal discretization (default: 1)
timeOrder =

! stationary of transient problem flag (default: true)
stationary =

! the variable on which to abort the calculation (default: 1)
! possible options are: - 1: RHO
!                       - 2: MX
!                       - 3: MY
!                       - 4: E
abortVariable =

! abort residual (default: 1e-6)
abortResidual =

! implicit or explicit flag (default: false)
implicit =

## explicit calculation

! number of Runge-Kutta stages to use, for the integration
! (1 is Euler integration, default: 1)
nRKstages =

## implicit calculation

! use BLUSGS preconditioner flag (default: false)
precond =

! maximum number of Newton iterations (default: 20)
nNewtonIter =

! abort criterion for Newton iteration (default: 0.001)
epsNewton =

! maximum number of Krylov-subspaces (default: 5)
nKdim =

! abort criterion for GMRES iteration (default: 0.001)
epsGMRES =

! gamma parameter for Eisenstat-Walker (default: 0.9)
gammaEW =

# Spatial Discretization

! selection of the flux function
! possible options are: -  1: Godunov flux
!			-  2: Roe flux
!			-  3: HLL flux
!			-  4: HLLE flux
!			-  5: HLLC flux
!			-  6: Lax-Friedrichs flux
!			-  7: Steger-Warming flux
!			-  8: Central flux
!			-  9: AUSMD flux
!			- 10: AUSMDV flux
!			- 11: van Leer flux
fluxFunction =

! order of spatial discretization (default: 1)
spatialOrder =

! limiter function, for when the spatial order is larger than 1 (default: 1)
! possible options are: - 1: Bart-Jesperson limiter
!                       - 2: Venkatakrishnan limiter
limiter =

! constant for the Venkatakrishnan limiter (default: 1)
venk_K =

# Input and Output

! basename of all the output files
fileName =

! end time of the calculation
tEnd =

! maximum iteration number
maxIter =

! time interval for data output
IOtimeInterval =

! iteration interval for data output
IOiterInterval =

! output format (default: 1)
! possible options are: - 1: CGNS output
!                       - 2: curve output
!                       - 3: csv output
outputFormat =

# Analysis

! has exact solution flag (default: false)
exactSolution =

! number of record points (default: 0), where field values are evaluated
! and their coordinates
nRecordPoints =
pointCoords =

! wing analysis flag (default: false)
calcWing =

! wing reference length (default: 1.0)
referenceLength =

! wing wall ID
wall_id =

! CL and CD abort residuals (default: 0.0)
cl_abortResidual =
cd_abortResidual =

